rules_version = '2';

service cloud.firestore {
  function isSignedIn() {
    return request.auth != null;
  }

  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }

    match /user/{user_id} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && request.auth.uid == user_id;

      match /private/privacy {
        allow read, update: if isSignedIn() && request.auth.uid == user_id;
      }
    }

    match /circle/{circle_id} {
      function isAdmin() {
        return get(/databases/$(database)/documents/circle/$(circle_id)/member/$(request.auth.uid)).data.role == 'admin';
      }

      function isMember() {
        return exists(/databases/$(database)/documents/circle/$(circle_id)/member/$(request.auth.uid));
      }

      allow read: if true;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && isAdmin();

      match /member/{user_id} {
        allow read: if true;
        allow create: if isSignedIn();
        allow delete: if isSignedIn() && (request.auth.uid == user_id || isAdmin());
        allow update: if isSignedIn() && isAdmin();
      }

      match /post/{post_id} {
        allow read: if true;
        allow create: if isSignedIn() && isMember();
        allow update: if isSignedIn() && resource.data.author == request.auth.uid;
        allow delete: if isSignedIn() && (resource.data.author == request.auth.uid || isAdmin());
      }
    }
  }
}
